{"remainingRequest":"/Users/panbing/store/lang/doc/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/panbing/store/lang/doc/blog/node_modules/vuepress-theme-api/components/NetworkPanel/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/panbing/store/lang/doc/blog/node_modules/vuepress-theme-api/components/NetworkPanel/index.vue","mtime":1620918715376},{"path":"/Users/panbing/store/lang/doc/blog/node_modules/cache-loader/dist/cjs.js","mtime":1620915890299},{"path":"/Users/panbing/store/lang/doc/blog/node_modules/babel-loader/lib/index.js","mtime":1620915889925},{"path":"/Users/panbing/store/lang/doc/blog/node_modules/cache-loader/dist/cjs.js","mtime":1620915890299},{"path":"/Users/panbing/store/lang/doc/blog/node_modules/vue-loader/lib/index.js","mtime":1620915890611}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTmV0d29ya1BhbmVsJywKICBwcm9wczogewogICAgdmlzaWJsZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgIH0sCiAgICBtZXRob2Q6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJywKICAgIH0sCiAgICB1cmw6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJywKICAgIH0sCiAgICBoZWFkZXJzOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gbnVsbCwKICAgIH0sCiAgICByZXF1ZXN0OiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gbnVsbCwKICAgIH0sCiAgICByZXNwb25zZTogewogICAgICB0eXBlOiBbT2JqZWN0LCBBcnJheSwgU3RyaW5nLCBudWxsXSwKICAgICAgZGVmYXVsdDogKCkgPT4gbnVsbCwKICAgIH0sCiAgICBzdGF0dXNDb2RlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycsCiAgICB9LAogICAgc3RhdHVzVGV4dDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnLAogICAgfSwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb2xsYXBzZTogdHJ1ZSwKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBoZWFkZXJUZXh0cygpIHsKICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuaGVhZGVycykKICAgICAgICAubWFwKChpdGVtKSA9PiBgJHtpdGVtfTogJHt0aGlzLmhlYWRlcnNbaXRlbV19YCkKICAgICAgICAuam9pbignXG4nKQogICAgfSwKICB9LAogIHdhdGNoOiB7CiAgICB2aXNpYmxlKHZhbHVlKSB7CiAgICAgIGlmICh2YWx1ZSkgewogICAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NOYW1lID0gYCR7CiAgICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTmFtZSA/IGRvY3VtZW50LmJvZHkuY2xhc3NOYW1lICsgJyAnIDogJycKICAgICAgICB9Z2xvYmFsLXN0eWxlX19ib2R5X19zY3JvbGwtZGlzYWJsZWRgCiAgICAgIH0gZWxzZSB7CiAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc05hbWUgPSBkb2N1bWVudC5ib2R5LmNsYXNzTmFtZQogICAgICAgICAgLnNwbGl0KCcgJykKICAgICAgICAgIC5maWx0ZXIoKGl0ZW0pID0+IGl0ZW0gIT09ICdnbG9iYWwtc3R5bGVfX2JvZHlfX3Njcm9sbC1kaXNhYmxlZCcpCiAgICAgICAgICAuam9pbignICcpCiAgICAgIH0KICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICBjbG9zZSgpIHsKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOnZpc2libGUnLCBmYWxzZSkKCiAgICAgIHRoaXMuY29sbGFwc2UgPSB0cnVlCiAgICB9LAogICAgZm9ybWF0SlNPTihkYXRhKSB7CiAgICAgIHJldHVybiBkYXRhID09PSBudWxsIHx8IGRhdGEgPT09IHVuZGVmaW5lZAogICAgICAgID8gJycKICAgICAgICA6IEpTT04uc3RyaW5naWZ5KGRhdGEsIG51bGwsIDQpCiAgICB9LAogICAgdG9nZ2xlQ29sbGFwc2VTdGF0dXMoKSB7CiAgICAgIHRoaXMuY29sbGFwc2UgPSAhdGhpcy5jb2xsYXBzZQogICAgfSwKICB9LAp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/vuepress-theme-api/components/NetworkPanel","sourcesContent":["<template>\n  <transition name=\"fade\">\n    <div\n      v-if=\"visible\"\n      class=\"network network__container\"\n      :class=\"{\n        'network--shown': visible,\n      }\"\n    >\n      <div class=\"network__mask\" @click=\"close\"></div>\n      <div class=\"network__box\">\n        <div class=\"network__heading\">\n          <div class=\"network__title\" @click=\"toggleCollapseStatus\">\n            Network\n          </div>\n          <div class=\"network__close-btn\" @click=\"close\">&times;</div>\n        </div>\n        <div class=\"network__body\">\n          <div\n            class=\"network__cont network__request\"\n            :class=\"{\n              'network__request--collapse': collapse,\n            }\"\n          >\n            <div class=\"network__url network-section\">\n              <div class=\"network-section__title\">Request</div>\n              <div class=\"network-section__body\">\n                <span class=\"network__method\">{{ method }}</span>\n                <span class=\"network__url\">{{ url }}</span>\n              </div>\n            </div>\n            <div class=\"network__header network-section\">\n              <div class=\"network-section__title\">Header</div>\n              <div class=\"network-section__body\">\n                <div class=\"network-section__cont\">{{ headerTexts }}</div>\n              </div>\n            </div>\n            <div class=\"network__payload network__section\">\n              <div class=\"network-section__title\">Payload</div>\n              <div class=\"network-section__body\">\n                <div class=\"network-section__cont\">\n                  <!-- display: inline -->{{ formatJSON(request)\n                  }}<!-- display: inline -->\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"network__cont network__response\">\n            <div class=\"network__status network-section\">\n              <div class=\"network-section__title\">Response</div>\n              <div class=\"network-section__body\">\n                <span class=\"network__code\">{{ statusCode }}</span>\n                <span class=\"network__text\">{{ statusText }}</span>\n              </div>\n            </div>\n            <div class=\"network__response-body network__section\">\n              <div class=\"network-section__title\">Body</div>\n              <div class=\"network-section__body\">\n                <div class=\"network-section__cont\">\n                  <!-- display: inline -->{{ formatJSON(response)\n                  }}<!-- display: inline -->\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script>\nexport default {\n  name: 'NetworkPanel',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n    method: {\n      type: String,\n      default: '',\n    },\n    url: {\n      type: String,\n      default: '',\n    },\n    headers: {\n      type: Object,\n      default: () => null,\n    },\n    request: {\n      type: Object,\n      default: () => null,\n    },\n    response: {\n      type: [Object, Array, String, null],\n      default: () => null,\n    },\n    statusCode: {\n      type: String,\n      default: '',\n    },\n    statusText: {\n      type: String,\n      default: '',\n    },\n  },\n  data() {\n    return {\n      collapse: true,\n    }\n  },\n  computed: {\n    headerTexts() {\n      return Object.keys(this.headers)\n        .map((item) => `${item}: ${this.headers[item]}`)\n        .join('\\n')\n    },\n  },\n  watch: {\n    visible(value) {\n      if (value) {\n        document.body.className = `${\n          document.body.className ? document.body.className + ' ' : ''\n        }global-style__body__scroll-disabled`\n      } else {\n        document.body.className = document.body.className\n          .split(' ')\n          .filter((item) => item !== 'global-style__body__scroll-disabled')\n          .join(' ')\n      }\n    },\n  },\n  methods: {\n    close() {\n      this.$emit('update:visible', false)\n\n      this.collapse = true\n    },\n    formatJSON(data) {\n      return data === null || data === undefined\n        ? ''\n        : JSON.stringify(data, null, 4)\n    },\n    toggleCollapseStatus() {\n      this.collapse = !this.collapse\n    },\n  },\n}\n</script>\n\n<style lang=\"stylus\">\n@import '../../styles/_variables.styl'\n\n.global-style__body__scroll-disabled\n  height: 100%\n  overflow: hidden\n\n.fade-enter-active, .fade-leave-active\n  transition: opacity .3s ease-in-out\n.fade-enter, .fade-leave-to\n  opacity: 0\n\n.network\n  &__container\n    position: fixed\n    top: 0\n    left: 0\n    z-index: 10\n    width: 100%\n    height: 100%\n    text-align: left\n\n  &__mask\n    position: absolute\n    top: 0\n    left: 0\n    width: 100%\n    height: 100%\n    background-color: rgba(0, 0, 0, 0.3)\n\n  &__box\n    position: absolute\n    top: 6rem\n    left: 50%\n    max-width: 90%\n    padding: 1.625rem 2rem\n    transform: translateX(-50%)\n    border-radius: 0.25rem\n    color: #000\n    background-color: #fff\n\n    @media screen and (max-width: $container-max-widths.md)\n      width: 90%\n\n  &__heading\n    position: relative\n    font-size: 1.25rem\n    user-select: none\n    cursor: ew-resize\n\n  &__close-btn\n    position: absolute\n    top: 0\n    right: 0\n    width: 26px\n    height: 26px\n    font-size: 26px\n    line-height: 22px\n    text-align: center\n    transition: all 0.6s ease-in-out\n    cursor: pointer\n\n    &:hover\n      transform: rotateZ(360deg)\n\n  &__body\n    display: flex\n    margin-top: 2rem\n    margin-left: -1rem\n    margin-right: -1rem\n\n  &__cont\n    flex: 1 1 auto\n    width: 50%\n    padding: 0 1rem\n\n    @media screen and (max-width: $container-max-widths.md)\n      width: 100%\n\n  &__request\n    @media screen and (max-width: $container-max-widths.md)\n      display: none\n\n    &--collapse\n      display: none\n      flex: 0 0 auto\n      width: 0\n      padding: 0\n\n.network-section\n  &__title\n    user-select: none\n\n  &__body\n    max-width: 34rem\n    padding: 0.875rem\n    margin: 0.5rem 0\n    overflow: auto\n    border-radius: 4px\n    background-color: #f6f8fa\n\n  &__cont\n    white-space: pre\n\n    @media screen and (min-width: $container-max-widths.md)\n      min-width: 38rem\n\n.network__header .network-section__body\n  height: 4rem\n.network__payload .network-section__body\n  height: 18rem\n.network__response-body .network-section__body\n  height: 24rem\n</style>\n"]}]}