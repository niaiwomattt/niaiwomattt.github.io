{"remainingRequest":"/Users/panbing/store/lang/doc/blog/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/panbing/store/lang/doc/blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/panbing/store/lang/doc/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/panbing/store/lang/doc/blog/node_modules/vuepress-theme-api/components/NetworkPanel/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/panbing/store/lang/doc/blog/node_modules/vuepress-theme-api/components/NetworkPanel/index.vue","mtime":1620918715376},{"path":"/Users/panbing/store/lang/doc/blog/node_modules/cache-loader/dist/cjs.js","mtime":1620915890299},{"path":"/Users/panbing/store/lang/doc/blog/node_modules/babel-loader/lib/index.js","mtime":1620915889925},{"path":"/Users/panbing/store/lang/doc/blog/node_modules/cache-loader/dist/cjs.js","mtime":1620915890299},{"path":"/Users/panbing/store/lang/doc/blog/node_modules/vue-loader/lib/index.js","mtime":1620915890611}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ05ldHdvcmtQYW5lbCcsCiAgcHJvcHM6IHsKICAgIHZpc2libGU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgImRlZmF1bHQiOiBmYWxzZQogICAgfSwKICAgIG1ldGhvZDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICJkZWZhdWx0IjogJycKICAgIH0sCiAgICB1cmw6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICAiZGVmYXVsdCI6ICcnCiAgICB9LAogICAgaGVhZGVyczogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgICJkZWZhdWx0IjogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0KICAgIH0sCiAgICByZXF1ZXN0OiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgImRlZmF1bHQiOiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQogICAgfSwKICAgIHJlc3BvbnNlOiB7CiAgICAgIHR5cGU6IFtPYmplY3QsIEFycmF5LCBTdHJpbmcsIG51bGxdLAogICAgICAiZGVmYXVsdCI6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBudWxsOwogICAgICB9CiAgICB9LAogICAgc3RhdHVzQ29kZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICJkZWZhdWx0IjogJycKICAgIH0sCiAgICBzdGF0dXNUZXh0OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgImRlZmF1bHQiOiAnJwogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbGxhcHNlOiB0cnVlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGhlYWRlclRleHRzOiBmdW5jdGlvbiBoZWFkZXJUZXh0cygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLmhlYWRlcnMpLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiAiIi5jb25jYXQoaXRlbSwgIjogIikuY29uY2F0KF90aGlzLmhlYWRlcnNbaXRlbV0pOwogICAgICB9KS5qb2luKCdcbicpOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIHZpc2libGU6IGZ1bmN0aW9uIHZpc2libGUodmFsdWUpIHsKICAgICAgaWYgKHZhbHVlKSB7CiAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc05hbWUgPSAiIi5jb25jYXQoZG9jdW1lbnQuYm9keS5jbGFzc05hbWUgPyBkb2N1bWVudC5ib2R5LmNsYXNzTmFtZSArICcgJyA6ICcnLCAiZ2xvYmFsLXN0eWxlX19ib2R5X19zY3JvbGwtZGlzYWJsZWQiKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTmFtZSA9IGRvY3VtZW50LmJvZHkuY2xhc3NOYW1lLnNwbGl0KCcgJykuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICByZXR1cm4gaXRlbSAhPT0gJ2dsb2JhbC1zdHlsZV9fYm9keV9fc2Nyb2xsLWRpc2FibGVkJzsKICAgICAgICB9KS5qb2luKCcgJyk7CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNsb3NlOiBmdW5jdGlvbiBjbG9zZSgpIHsKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOnZpc2libGUnLCBmYWxzZSk7CiAgICAgIHRoaXMuY29sbGFwc2UgPSB0cnVlOwogICAgfSwKICAgIGZvcm1hdEpTT046IGZ1bmN0aW9uIGZvcm1hdEpTT04oZGF0YSkgewogICAgICByZXR1cm4gZGF0YSA9PT0gbnVsbCB8fCBkYXRhID09PSB1bmRlZmluZWQgPyAnJyA6IEpTT04uc3RyaW5naWZ5KGRhdGEsIG51bGwsIDQpOwogICAgfSwKICAgIHRvZ2dsZUNvbGxhcHNlU3RhdHVzOiBmdW5jdGlvbiB0b2dnbGVDb2xsYXBzZVN0YXR1cygpIHsKICAgICAgdGhpcy5jb2xsYXBzZSA9ICF0aGlzLmNvbGxhcHNlOwogICAgfQogIH0KfTs="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,iBAAA;AAFA,KADA;AAKA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,iBAAA;AAFA,KALA;AASA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,iBAAA;AAFA,KATA;AAaA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,iBAAA;AAAA,eAAA,IAAA;AAAA;AAFA,KAbA;AAiBA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,iBAAA;AAAA,eAAA,IAAA;AAAA;AAFA,KAjBA;AAqBA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,KAAA,EAAA,MAAA,EAAA,IAAA,CADA;AAEA,iBAAA;AAAA,eAAA,IAAA;AAAA;AAFA,KArBA;AAyBA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,iBAAA;AAFA,KAzBA;AA6BA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,iBAAA;AAFA;AA7BA,GAFA;AAoCA,EAAA,IApCA,kBAoCA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,GAxCA;AAyCA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AAAA;;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,KAAA,OAAA,EACA,GADA,CACA,UAAA,IAAA;AAAA,yBAAA,IAAA,eAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,OADA,EAEA,IAFA,CAEA,IAFA,CAAA;AAGA;AALA,GAzCA;AAgDA,EAAA,KAAA,EAAA;AACA,IAAA,OADA,mBACA,KADA,EACA;AACA,UAAA,KAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,SAAA,aACA,QAAA,CAAA,IAAA,CAAA,SAAA,GAAA,QAAA,CAAA,IAAA,CAAA,SAAA,GAAA,GAAA,GAAA,EADA;AAGA,OAJA,MAIA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,SAAA,GAAA,QAAA,CAAA,IAAA,CAAA,SAAA,CACA,KADA,CACA,GADA,EAEA,MAFA,CAEA,UAAA,IAAA;AAAA,iBAAA,IAAA,KAAA,qCAAA;AAAA,SAFA,EAGA,IAHA,CAGA,GAHA,CAAA;AAIA;AACA;AAZA,GAhDA;AA8DA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,WAAA,KAAA,CAAA,gBAAA,EAAA,KAAA;AAEA,WAAA,QAAA,GAAA,IAAA;AACA,KALA;AAMA,IAAA,UANA,sBAMA,IANA,EAMA;AACA,aAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,SAAA,GACA,EADA,GAEA,IAAA,CAAA,SAAA,CAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAFA;AAGA,KAVA;AAWA,IAAA,oBAXA,kCAWA;AACA,WAAA,QAAA,GAAA,CAAA,KAAA,QAAA;AACA;AAbA;AA9DA,CAAA","sourcesContent":["<template>\n  <transition name=\"fade\">\n    <div\n      v-if=\"visible\"\n      class=\"network network__container\"\n      :class=\"{\n        'network--shown': visible,\n      }\"\n    >\n      <div class=\"network__mask\" @click=\"close\"></div>\n      <div class=\"network__box\">\n        <div class=\"network__heading\">\n          <div class=\"network__title\" @click=\"toggleCollapseStatus\">\n            Network\n          </div>\n          <div class=\"network__close-btn\" @click=\"close\">&times;</div>\n        </div>\n        <div class=\"network__body\">\n          <div\n            class=\"network__cont network__request\"\n            :class=\"{\n              'network__request--collapse': collapse,\n            }\"\n          >\n            <div class=\"network__url network-section\">\n              <div class=\"network-section__title\">Request</div>\n              <div class=\"network-section__body\">\n                <span class=\"network__method\">{{ method }}</span>\n                <span class=\"network__url\">{{ url }}</span>\n              </div>\n            </div>\n            <div class=\"network__header network-section\">\n              <div class=\"network-section__title\">Header</div>\n              <div class=\"network-section__body\">\n                <div class=\"network-section__cont\">{{ headerTexts }}</div>\n              </div>\n            </div>\n            <div class=\"network__payload network__section\">\n              <div class=\"network-section__title\">Payload</div>\n              <div class=\"network-section__body\">\n                <div class=\"network-section__cont\">\n                  <!-- display: inline -->{{ formatJSON(request)\n                  }}<!-- display: inline -->\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"network__cont network__response\">\n            <div class=\"network__status network-section\">\n              <div class=\"network-section__title\">Response</div>\n              <div class=\"network-section__body\">\n                <span class=\"network__code\">{{ statusCode }}</span>\n                <span class=\"network__text\">{{ statusText }}</span>\n              </div>\n            </div>\n            <div class=\"network__response-body network__section\">\n              <div class=\"network-section__title\">Body</div>\n              <div class=\"network-section__body\">\n                <div class=\"network-section__cont\">\n                  <!-- display: inline -->{{ formatJSON(response)\n                  }}<!-- display: inline -->\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script>\nexport default {\n  name: 'NetworkPanel',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n    method: {\n      type: String,\n      default: '',\n    },\n    url: {\n      type: String,\n      default: '',\n    },\n    headers: {\n      type: Object,\n      default: () => null,\n    },\n    request: {\n      type: Object,\n      default: () => null,\n    },\n    response: {\n      type: [Object, Array, String, null],\n      default: () => null,\n    },\n    statusCode: {\n      type: String,\n      default: '',\n    },\n    statusText: {\n      type: String,\n      default: '',\n    },\n  },\n  data() {\n    return {\n      collapse: true,\n    }\n  },\n  computed: {\n    headerTexts() {\n      return Object.keys(this.headers)\n        .map((item) => `${item}: ${this.headers[item]}`)\n        .join('\\n')\n    },\n  },\n  watch: {\n    visible(value) {\n      if (value) {\n        document.body.className = `${\n          document.body.className ? document.body.className + ' ' : ''\n        }global-style__body__scroll-disabled`\n      } else {\n        document.body.className = document.body.className\n          .split(' ')\n          .filter((item) => item !== 'global-style__body__scroll-disabled')\n          .join(' ')\n      }\n    },\n  },\n  methods: {\n    close() {\n      this.$emit('update:visible', false)\n\n      this.collapse = true\n    },\n    formatJSON(data) {\n      return data === null || data === undefined\n        ? ''\n        : JSON.stringify(data, null, 4)\n    },\n    toggleCollapseStatus() {\n      this.collapse = !this.collapse\n    },\n  },\n}\n</script>\n\n<style lang=\"stylus\">\n@import '../../styles/_variables.styl'\n\n.global-style__body__scroll-disabled\n  height: 100%\n  overflow: hidden\n\n.fade-enter-active, .fade-leave-active\n  transition: opacity .3s ease-in-out\n.fade-enter, .fade-leave-to\n  opacity: 0\n\n.network\n  &__container\n    position: fixed\n    top: 0\n    left: 0\n    z-index: 10\n    width: 100%\n    height: 100%\n    text-align: left\n\n  &__mask\n    position: absolute\n    top: 0\n    left: 0\n    width: 100%\n    height: 100%\n    background-color: rgba(0, 0, 0, 0.3)\n\n  &__box\n    position: absolute\n    top: 6rem\n    left: 50%\n    max-width: 90%\n    padding: 1.625rem 2rem\n    transform: translateX(-50%)\n    border-radius: 0.25rem\n    color: #000\n    background-color: #fff\n\n    @media screen and (max-width: $container-max-widths.md)\n      width: 90%\n\n  &__heading\n    position: relative\n    font-size: 1.25rem\n    user-select: none\n    cursor: ew-resize\n\n  &__close-btn\n    position: absolute\n    top: 0\n    right: 0\n    width: 26px\n    height: 26px\n    font-size: 26px\n    line-height: 22px\n    text-align: center\n    transition: all 0.6s ease-in-out\n    cursor: pointer\n\n    &:hover\n      transform: rotateZ(360deg)\n\n  &__body\n    display: flex\n    margin-top: 2rem\n    margin-left: -1rem\n    margin-right: -1rem\n\n  &__cont\n    flex: 1 1 auto\n    width: 50%\n    padding: 0 1rem\n\n    @media screen and (max-width: $container-max-widths.md)\n      width: 100%\n\n  &__request\n    @media screen and (max-width: $container-max-widths.md)\n      display: none\n\n    &--collapse\n      display: none\n      flex: 0 0 auto\n      width: 0\n      padding: 0\n\n.network-section\n  &__title\n    user-select: none\n\n  &__body\n    max-width: 34rem\n    padding: 0.875rem\n    margin: 0.5rem 0\n    overflow: auto\n    border-radius: 4px\n    background-color: #f6f8fa\n\n  &__cont\n    white-space: pre\n\n    @media screen and (min-width: $container-max-widths.md)\n      min-width: 38rem\n\n.network__header .network-section__body\n  height: 4rem\n.network__payload .network-section__body\n  height: 18rem\n.network__response-body .network-section__body\n  height: 24rem\n</style>\n"],"sourceRoot":"node_modules/vuepress-theme-api/components/NetworkPanel"}]}