{"remainingRequest":"/Users/panbing/store/lang/doc/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/panbing/store/lang/doc/blog/node_modules/vuepress-theme-api/components/Sidebar/index.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"/Users/panbing/store/lang/doc/blog/node_modules/vuepress-theme-api/components/Sidebar/index.vue","mtime":1620918715376},{"path":"/Users/panbing/store/lang/doc/blog/node_modules/css-loader/dist/cjs.js","mtime":1620915890300},{"path":"/Users/panbing/store/lang/doc/blog/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1620915890611},{"path":"/Users/panbing/store/lang/doc/blog/node_modules/postcss-loader/src/index.js","mtime":1620915890507},{"path":"/Users/panbing/store/lang/doc/blog/node_modules/stylus-loader/index.js","mtime":1620915889200},{"path":"/Users/panbing/store/lang/doc/blog/node_modules/cache-loader/dist/cjs.js","mtime":1620915890299},{"path":"/Users/panbing/store/lang/doc/blog/node_modules/vue-loader/lib/index.js","mtime":1620915890611}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnLi4vLi4vc3R5bGVzL192YXJpYWJsZXMuc3R5bCcKCi5zaWRlYmFyCiAgcG9zaXRpb246IGZpeGVkCiAgdG9wOiAwCiAgYm90dG9tOiAwCiAgei1pbmRleDogMgogIHdpZHRoOiAxMDAlCiAgbWFyZ2luLWxlZnQgMXB4CiAgcGFkZGluZy10b3A6IDNyZW0KICBvdmVyZmxvdzogYXV0bwogIGJhY2tncm91bmQ6ICR3aGl0ZQogIHVzZXItc2VsZWN0OiBub25lCgouZ3JvdXAKICBtYXJnaW4tYm90dG9tOiA0cmVtCgogICZfX3RpdGxlCiAgICBwYWRkaW5nLWxlZnQ6IDMwcHgKICAgIG1hcmdpbi1ib3R0b206IDFlbQogICAgZm9udC1zaXplOiAxNHB4CiAgICBmb250LXdlaWdodDogMzAwCiAgICBsZXR0ZXItc3BhY2luZzogMS4zcHgKICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2UKICAgIGNvbG9yOiAjODg4CgouY2F0ZWdvcnkKICBhLAogIGE6aG92ZXIKICAgIGNvbG9yOiAkYmxhY2sKCiAgJl9fbGFiZWwsCiAgJl9faGVhZGVyLWl0ZW0KICAgIG1hcmdpbjogMC42ZW0gMAogICAgbGluZS1oZWlnaHQ6IDJlbQoKICAmX19sYWJlbCwKICAmX19oZWFkZXJzCiAgICBib3JkZXItbGVmdDogNHB4IHNvbGlkICR3aGl0ZQogICAgYm9yZGVyLXJpZ2h0OiA0cHggc29saWQgJHdoaXRlCgogICZfX2xpbmsKICAgIGRpc3BsYXk6IGJsb2NrCiAgICBwYWRkaW5nOiAwIDI2cHgKCiAgJl9faGVhZGVycwogICAgZGlzcGxheTogbm9uZQoKICAmLS1hY3RpdmUsCiAgJi0tc2VsZWN0ZWQKICAgICYgXlswXV9faGVhZGVycwogICAgICBkaXNwbGF5OiBibG9jawoKICAmOmhvdmVyICZfX2xhYmVsLAogICZfX2hlYWRlcnM6aG92ZXIsCiAgJi0tYWN0aXZlICZfX2xhYmVsLAogICYtLWFjdGl2ZSZfX2hlYWRlcnMsCiAgLnJvdXRlci1saW5rLWV4YWN0LWFjdGl2ZQogICAgZm9udC13ZWlnaHQ6IDYwMAogICAgYm9yZGVyLWxlZnQtY29sb3I6ICRibGFjawoKICAmX19oZWFkZXItaXRlbQogICAgcG9zaXRpb246IHJlbGF0aXZlCiAgICBwYWRkaW5nLWxlZnQ6IDMwcHgKICAgIG1hcmdpbjogMC4xZW0gMAoKICAgICYgXlswXV9fbGluawogICAgICBwYWRkaW5nLWxlZnQ6IDIwcHgKCiAgICAmOjpiZWZvcmUKICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICBtYXJnaW4tcmlnaHQ6IDRweAogICAgICBjb2xvcjogIzk3OTc5NwogICAgICBjb250ZW50OiAiLSIK"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsVA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/vuepress-theme-api/components/Sidebar","sourcesContent":["<template>\n  <div\n    ref=\"container\"\n    class=\"sidebar\"\n    :style=\"{ width: containerWidth }\"\n    @click=\"savePosition\"\n  >\n    <div class=\"group\">\n      <div class=\"group__title\">Search</div>\n      <div class=\"group__body\">\n        <Search v-model=\"searchKeyword\" :options=\"searchedOptions\" />\n      </div>\n    </div>\n    <div v-if=\"shouldShowLangSelect\" class=\"group\">\n      <div class=\"group__title\">{{ languageSelectText }}</div>\n      <div class=\"group__body\">\n        <div class=\"sidebar__lang\">\n          <Select\n            :options=\"localePathList\"\n            :value=\"currentPagePath\"\n            @change=\"toggleLocale\"\n          ></Select>\n        </div>\n      </div>\n    </div>\n    <div\n      v-for=\"(sidebarGroupItem, index) in sidebars\"\n      :key=\"sidebarGroupItem.to || index\"\n      class=\"group\"\n    >\n      <div class=\"group__title\">\n        {{ sidebarGroupOrder[index].replace(/^\\d+[_-]*/g, '') }}\n      </div>\n      <div class=\"group__body\">\n        <!-- render README.md in this folder -->\n        <div\n          v-if=\"sidebarGroupItem.to\"\n          :class=\"[\n            'group__category',\n            'category',\n            {\n              'category--selected':\n                currentRouteFullPath === sidebarGroupItem.to,\n              'category--active': currentRouteFullPath === sidebarGroupItem.to,\n            },\n          ]\"\n        >\n          <div class=\"category__label\">\n            <NavLink\n              class=\"category__link sidebar-link\"\n              :to=\"sidebarGroupItem.to\"\n              >{{\n                title(sidebarGroupItem.title || sidebarGroupOrder[index])\n              }}</NavLink\n            >\n          </div>\n        </div>\n\n        <!-- render headers of README.md in this folder -->\n        <div v-if=\"sidebarGroupItem.headers && sidebarGroupItem.headers.length\">\n          <div\n            v-for=\"header in sidebarGroupItem.headers\"\n            :key=\"`${sidebarGroupItem.to}#${header.slug}`\"\n            :class=\"[\n              'group__category',\n              'category',\n              {\n                'category--selected':\n                  currentRouteFullPath ===\n                  `${sidebarGroupItem.to}#${header.slug}`,\n                'category--active':\n                  currentRouteFullPath ===\n                  `${sidebarGroupItem.to}#${header.slug}`,\n              },\n            ]\"\n          >\n            <div class=\"category__label\">\n              <NavLink\n                class=\"category__link sidebar-link\"\n                :to=\"`${sidebarGroupItem.to}#${header.slug}`\"\n                >{{ title(header.title) }}</NavLink\n              >\n            </div>\n          </div>\n        </div>\n\n        <!-- render other files in this folder -->\n        <div\n          v-if=\"sidebarGroupItem.children && sidebarGroupItem.children.length\"\n        >\n          <div\n            v-for=\"child in sidebarGroupItem.children\"\n            :key=\"`${child.to}`\"\n            :class=\"[\n              'group__category',\n              'category',\n              {\n                'category--selected':\n                  !child.isLangNav && $route.path === child.to,\n                'category--active':\n                  !child.isLangNav && currentRouteFullPath === child.to,\n              },\n            ]\"\n          >\n            <div class=\"category__label\">\n              <NavLink class=\"category__link sidebar-link\" :to=\"child.to\">{{\n                title(child.title)\n              }}</NavLink>\n            </div>\n            <div v-if=\"child.headers && child.headers.length\">\n              <div\n                v-for=\"header in child.headers\"\n                :key=\"`${child.to}#${header.slug}`\"\n                :class=\"[\n                  'category__headers',\n                  {\n                    'category--active':\n                      currentRouteFullPath === `${child.to}#${header.slug}`,\n                  },\n                ]\"\n              >\n                <div class=\"category__header-item\">\n                  <NavLink\n                    class=\"category__link sidebar-link\"\n                    :to=\"`${child.to}#${header.slug}`\"\n                    >{{ title(header.title) }}</NavLink\n                  >\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport config from '../../helpers/config'\nimport title from '../../helpers/title'\nimport NavLink from '../NavLink'\n\nexport default {\n  name: 'Sidebar',\n  components: {\n    NavLink,\n  },\n  props: {\n    items: {\n      type: Object,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      containerWidth: '100%',\n      searchKeyword: '',\n    }\n  },\n  computed: {\n    searchedOptions() {\n      const results = []\n\n      this.sidebars.forEach((item) => {\n        if (item.to) {\n          results.push({\n            to: item.to,\n            text: item.title,\n          })\n        }\n\n        if (item.headers) {\n          item.headers.forEach((header) => {\n            results.push({\n              to: `${item.to}#${header.slug}`,\n              text: header.title,\n            })\n          })\n        }\n\n        if (item.children) {\n          item.children.forEach((child) => {\n            results.push({\n              to: child.to,\n              text: child.title,\n            })\n\n            if (child.headers) {\n              child.headers.forEach((h) => {\n                results.push({\n                  to: `${child.to}#${h.slug}`,\n                  text: h.title,\n                })\n              })\n            }\n          })\n        }\n      })\n\n      return results.filter((item) =>\n        (item.text || '')\n          .toLowerCase()\n          .includes(this.searchKeyword.toLowerCase())\n      )\n    },\n    shouldShowLangSelect() {\n      return Object.keys(this.$site.locales || {}).length > 1\n    },\n    languageSelectText() {\n      return (\n        config.get(this.$site, 'selectText', this.$localePath) || 'languages'\n      )\n    },\n    currentPagePath() {\n      return this.$page.path\n    },\n    currentRouteFullPath() {\n      return decodeURIComponent(this.$route.fullPath)\n    },\n    localePathList() {\n      return Object.keys(this.$site.locales || {}).map((locale) => {\n        const item = this.$site.locales[locale]\n        const languageTitle =\n          config.get(this.$site, 'label', locale) || item.text || item.lang\n\n        let path = ''\n\n        if (item.path === this.$localePath) {\n          path = this.$page.path // Stay on the current page\n        } else {\n          path = this.$page.path.replace(this.$localePath, item.path) // Try to stay on the same page\n\n          const notFound = !this.$site.pages.some((page) => page.path === path)\n\n          if (notFound) {\n            path = item.path // Fallback to homepage\n          }\n        }\n\n        return {\n          prop: languageTitle,\n          value: path,\n        }\n      })\n    },\n    sidebarGroupOrder() {\n      const groupOrderConfig = config.get(\n        this.$site,\n        'sidebarGroupOrder',\n        this.$localePath\n      )\n\n      const order = groupOrderConfig\n        ? groupOrderConfig.filter((item) => !!this.items[item])\n        : Object.keys(this.items)\n\n      const index = order.indexOf('home')\n\n      if (index !== -1) {\n        order.splice(index, 1)\n      }\n\n      order.sort()\n      order.unshift('home')\n\n      return order\n    },\n    sidebars() {\n      return this.sidebarGroupOrder\n        .map((item) => {\n          return this.items[item]\n        })\n        .filter((item) => item)\n    },\n  },\n  mounted() {\n    this.refreshContainerWidth()\n    this.checkActiveSidebarItem()\n\n    window.addEventListener('resize', this.refreshContainerWidth)\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.refreshContainerWidth)\n  },\n  methods: {\n    title,\n    toggleLocale(path) {\n      this.$router.push(path)\n    },\n    refreshContainerWidth() {\n      const width = this.$refs.container.parentNode.getBoundingClientRect()\n        .width\n\n      this.containerWidth = width ? `${width}px` : '100%'\n    },\n    savePosition() {\n      if (!this.$refs.container) {\n        return\n      }\n\n      const top = this.$refs.container.scrollTop\n\n      window.localStorage.setItem('vuepress_theme_api_sidebar_position', top)\n    },\n    restorePosition() {\n      const lastPosition = parseInt(\n        window.localStorage.getItem('vuepress_theme_api_sidebar_position'),\n        10\n      )\n\n      if (lastPosition) {\n        this.$refs.container.scrollTop = lastPosition\n        return\n      }\n    },\n    checkActiveSidebarItem() {\n      const el = this.$refs.container.querySelector('.category--active')\n\n      if (!el) {\n        this.restorePosition()\n\n        return\n      }\n\n      const viewPortHeight = document.documentElement.clientHeight\n      const { top } = el.getBoundingClientRect()\n\n      const visible = top < viewPortHeight\n\n      if (visible) {\n        this.restorePosition()\n      } else {\n        this.$refs.container.scrollTop = top - 100\n\n        this.savePosition()\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"stylus\">\n@import '../../styles/_variables.styl'\n\n.sidebar\n  position: fixed\n  top: 0\n  bottom: 0\n  z-index: 2\n  width: 100%\n  margin-left 1px\n  padding-top: 3rem\n  overflow: auto\n  background: $white\n  user-select: none\n\n.group\n  margin-bottom: 4rem\n\n  &__title\n    padding-left: 30px\n    margin-bottom: 1em\n    font-size: 14px\n    font-weight: 300\n    letter-spacing: 1.3px\n    text-transform: uppercase\n    color: #888\n\n.category\n  a,\n  a:hover\n    color: $black\n\n  &__label,\n  &__header-item\n    margin: 0.6em 0\n    line-height: 2em\n\n  &__label,\n  &__headers\n    border-left: 4px solid $white\n    border-right: 4px solid $white\n\n  &__link\n    display: block\n    padding: 0 26px\n\n  &__headers\n    display: none\n\n  &--active,\n  &--selected\n    & ^[0]__headers\n      display: block\n\n  &:hover &__label,\n  &__headers:hover,\n  &--active &__label,\n  &--active&__headers,\n  .router-link-exact-active\n    font-weight: 600\n    border-left-color: $black\n\n  &__header-item\n    position: relative\n    padding-left: 30px\n    margin: 0.1em 0\n\n    & ^[0]__link\n      padding-left: 20px\n\n    &::before\n      position: absolute;\n      margin-right: 4px\n      color: #979797\n      content: \"-\"\n</style>\n"]}]}